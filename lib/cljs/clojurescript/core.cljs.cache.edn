;; Analyzed by ClojureScript 1.8.41
{:use-macros nil, :excludes #{}, :name clojurescript.core, :imports nil, :requires {cljs.pprint cljs.pprint, cljs cljs.js, cljs.js cljs.js, r cljs.tools.reader, cljs.tools.reader cljs.tools.reader, str clojure.string, clojure.string clojure.string}, :uses {pprint cljs.pprint}, :defs {compile {:protocol-inline nil, :meta {:file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :line 88, :column 16, :end-line 88, :end-column 23, :export true, :arglists (quote ([in-str library-paths]))}, :name clojurescript.core/compile, :variadic false, :file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :end-column 23, :method-params ([in-str library-paths]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 2, :fn-var true, :arglists (quote ([in-str library-paths]))}, standard-library-path {:name clojurescript.core/standard-library-path, :file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :line 18, :column 1, :end-line 18, :end-column 27, :meta {:file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :line 18, :column 6, :end-line 18, :end-column 27}}, eval {:protocol-inline nil, :meta {:file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :line 76, :column 16, :end-line 76, :end-column 20, :export true, :arglists (quote ([in-str library-paths]))}, :name clojurescript.core/eval, :variadic false, :file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :end-column 20, :method-params ([in-str library-paths]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([in-str library-paths]))}, first-satisfying {:protocol-inline nil, :meta {:file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :line 33, :column 7, :end-line 33, :end-column 23, :arglists (quote ([pred? coll]))}, :name clojurescript.core/first-satisfying, :variadic false, :file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :end-column 23, :method-params ([pred? coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred? coll]))}, read {:name clojurescript.core/read, :file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :line 9, :column 1, :end-line 9, :end-column 19, :export true, :meta {:file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :line 9, :column 15, :end-line 9, :end-column 19, :export true}}, node-path {:name clojurescript.core/node-path, :file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :line 15, :column 1, :end-line 15, :end-column 15, :meta {:file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :line 15, :column 6, :end-line 15, :end-column 15}}, require-extension {:protocol-inline nil, :meta {:file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :line 42, :column 7, :end-line 42, :end-column 24, :arglists (quote ([extension]))}, :name clojurescript.core/require-extension, :variadic false, :file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :end-column 24, :method-params ([extension]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([extension]))}, __dirname {:name clojurescript.core/__dirname, :file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :line 21, :column 1, :end-line 21, :end-column 15, :meta {:file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :line 21, :column 6, :end-line 21, :end-column 15}}, mk-load-fn {:protocol-inline nil, :meta {:file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :line 53, :column 7, :end-line 53, :end-column 17, :arglists (quote ([library-paths]))}, :name clojurescript.core/mk-load-fn, :variadic false, :file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :end-column 17, :method-params ([library-paths]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([library-paths]))}, readString {:name clojurescript.core/readString, :file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :line 11, :column 1, :end-line 11, :end-column 25, :export true, :meta {:file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :line 11, :column 15, :end-line 11, :end-column 25, :export true}}, file-readable? {:protocol-inline nil, :meta {:file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :line 24, :column 7, :end-line 24, :end-column 21, :arglists (quote ([path]))}, :name clojurescript.core/file-readable?, :variadic false, :file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :end-column 21, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path]))}, node-fs {:name clojurescript.core/node-fs, :file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :line 14, :column 1, :end-line 14, :end-column 13, :meta {:file "/home/steve/src/clojurescript-nodejs/bootstrap/../src/clojurescript/core.cljs", :line 14, :column 6, :end-line 14, :end-column 13}}}, :require-macros {cljs.pprint cljs.pprint, cljs cljs.js, cljs.js cljs.js}, :cljs.analyzer/constants {:seen #{:load :path :else :def-emits-var :value :source bar :lang :error :eval}, :order [:else :path :lang :source bar :eval :def-emits-var :load :error :value]}, :doc nil}